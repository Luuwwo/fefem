{"version":3,"sources":["NodeForm.js","ElementForm.js","ForceForm.js","NodeTable.js","Visualization.js","SettingsPanel.js","App.js","index.js","assets/logo.png"],"names":["NodeForm","_ref","x","y","setX","setY","fixedX","fixedY","setFixedX","setFixedY","addNode","React","createElement","type","placeholder","value","onChange","e","target","checked","onClick","ElementForm","fromNode","toNode","setFromNode","setToNode","addElement","nodes","map","n","key","id","ForceForm","forceNodeId","setForceNodeId","fx","fy","setFx","setFy","applyForce","NodeTable","border","cellPadding","style","borderCollapse","node","Visualization","elements","displacements","showAnimation","animationFactor","showNodeLabels","showForces","darkMode","getAnimatedCoord","disp","dx","Ux","dy","Uy","scale","centerX","centerY","getTransform","positions","d","find","dis","length","xs","p","ys","minX","Math","min","maxX","max","minY","maxY","width","height","transformCoord","_ref2","backgroundColor","el","n1","from","n2","to","d1","d2","x1","y1","x2","y2","stroke","strokeWidth","cx","cy","r","fill","fontSize","Fragment","markerEnd","markerWidth","markerHeight","refX","refY","orient","markerUnits","SettingsPanel","setShowAnimation","setShowNodeLabels","setShowForces","darkTheme","setDarkTheme","margin","display","gap","flexWrap","App","setNodes","useState","setElements","setDisplacements","setAnimationFactor","useEffect","direction","interval","setInterval","prev","next","clearInterval","padding","color","minHeight","alignItems","marginBottom","src","logo","alt","fontWeight","newNode","parseFloat","newElement","parseInt","updatedNodes","calculate","dof","K","Array","F","L","sqrt","c","s","k","E","k_local","row","val","indices","i","j","forEach","index","U","gaussSolve","A","b","maxEl","abs","maxRow","results","alert","toFixed","join","marginTop","ReactDOM","createRoot","document","getElementById","render","StrictMode","module","exports","__webpack_require__"],"mappings":"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","file":"static/js/main.2e8e44c0.chunk.js","sourcesContent":["\nimport React from \"react\";\n\nconst NodeForm = ({ x, y, setX, setY, fixedX, fixedY, setFixedX, setFixedY, addNode }) => (\n  <div>\n    <h2>Добавление узлов</h2>\n    <input type=\"number\" placeholder=\"X\" value={x} onChange={(e) => setX(e.target.value)} />\n    <input type=\"number\" placeholder=\"Y\" value={y} onChange={(e) => setY(e.target.value)} />\n    <label><input type=\"checkbox\" checked={fixedX} onChange={(e) => setFixedX(e.target.checked)} /> Зафиксировать X</label>\n    <label><input type=\"checkbox\" checked={fixedY} onChange={(e) => setFixedY(e.target.checked)} /> Зафиксировать Y</label>\n    <button onClick={addNode}>Добавить узел</button>\n  </div>\n);\nexport default NodeForm;\n","\nimport React from \"react\";\n\nconst ElementForm = ({ fromNode, toNode, setFromNode, setToNode, addElement, nodes }) => (\n  <div>\n    <h2>Добавление элементов</h2>\n    <select value={fromNode} onChange={(e) => setFromNode(e.target.value)}>\n      <option value=\"\">От узла</option>\n      {nodes.map((n) => <option key={n.id} value={n.id}>{n.id}</option>)}\n    </select>\n    <select value={toNode} onChange={(e) => setToNode(e.target.value)}>\n      <option value=\"\">До узла</option>\n      {nodes.map((n) => <option key={n.id} value={n.id}>{n.id}</option>)}\n    </select>\n    <button onClick={addElement}>Добавить элемент</button>\n  </div>\n);\nexport default ElementForm;\n","\nimport React from \"react\";\n\nconst ForceForm = ({ forceNodeId, setForceNodeId, fx, fy, setFx, setFy, applyForce, nodes }) => (\n  <div>\n    <h2>Добавление нагрузок</h2>\n    <select value={forceNodeId} onChange={(e) => setForceNodeId(e.target.value)}>\n      <option value=\"\">Выберите узел</option>\n      {nodes.map((n) => <option key={n.id} value={n.id}>{n.id}</option>)}\n    </select>\n    <input type=\"number\" placeholder=\"Fx\" value={fx} onChange={(e) => setFx(e.target.value)} />\n    <input type=\"number\" placeholder=\"Fy\" value={fy} onChange={(e) => setFy(e.target.value)} />\n    <button onClick={applyForce}>Применить</button>\n  </div>\n);\nexport default ForceForm;\n","\nimport React from \"react\";\n\nconst NodeTable = ({ nodes }) => (\n  <div>\n    <h3>Список узлов:</h3>\n    <table border=\"1\" cellPadding=\"4\" style={{ borderCollapse: \"collapse\" }}>\n      <thead>\n        <tr><th>ID</th><th>X</th><th>Y</th><th>Fx</th><th>Fy</th><th>Закр.X</th><th>Закр.Y</th></tr>\n      </thead>\n      <tbody>\n        {nodes.map((node) => (\n          <tr key={node.id}>\n            <td>{node.id}</td>\n            <td>{node.x}</td>\n            <td>{node.y}</td>\n            <td>{node.fx}</td>\n            <td>{node.fy}</td>\n            <td>{node.fixedX ? '✓' : ''}</td>\n            <td>{node.fixedY ? '✓' : ''}</td>\n          </tr>\n        ))}\n      </tbody>\n    </table>\n  </div>\n);\nexport default NodeTable;\n","\nimport React, { useEffect } from \"react\";\n\nconst Visualization = ({\n  nodes,\n  elements,\n  displacements,\n  showAnimation,\n  animationFactor,\n  showNodeLabels,\n  showForces,\n  darkMode\n}) => {\n  const getAnimatedCoord = (node, disp) => {\n    const dx = (showAnimation && disp?.Ux) ? disp.Ux * animationFactor : 0;\n    const dy = (showAnimation && disp?.Uy) ? disp.Uy * animationFactor : 0;\n    const x = node.x + dx;\n    const y = node.y + dy;\n    return [x, y];\n  };\n\n  const getTransform = () => {\n    const positions = nodes.map((node) => {\n      const d = displacements.find((dis) => dis.id === node.id);\n      const dx = showAnimation && d?.Ux ? d.Ux * animationFactor : 0;\n      const dy = showAnimation && d?.Uy ? d.Uy * animationFactor : 0;\n      return {\n        x: node.x + dx,\n        y: node.y + dy,\n      };\n    });\n  \n    if (positions.length === 0) return { scale: 1, centerX: 0, centerY: 0 };\n  \n    const xs = positions.map((p) => p.x);\n    const ys = positions.map((p) => p.y);\n    const minX = Math.min(...xs);\n    const maxX = Math.max(...xs);\n    const minY = Math.min(...ys);\n    const maxY = Math.max(...ys);\n  \n    const width = maxX - minX || 1;\n    const height = maxY - minY || 1;\n    const scale = 400 / Math.max(width, height);\n    const centerX = (minX + maxX) / 2;\n    const centerY = (minY + maxY) / 2;\n  \n    return { scale, centerX, centerY };\n  };\n  \n\n  const { scale, centerX, centerY } = getTransform();\n\n  const transformCoord = ([x, y]) => {\n    return [\n      (x - centerX) * scale + 250,\n      250 - (y - centerY) * scale,\n    ];\n  };\n\n  return (\n    <svg width=\"500\" height=\"500\" style={{ border: \"1px solid #ccc\", backgroundColor: darkMode ? '#222' : '#fff' }}>\n      {elements.map(el => {\n        const n1 = nodes.find(n => n.id === el.from);\n        const n2 = nodes.find(n => n.id === el.to);\n        const d1 = displacements.find(d => d.id === el.from);\n        const d2 = displacements.find(d => d.id === el.to);\n        if (!n1 || !n2) return null;\n        const [x1, y1] = transformCoord(getAnimatedCoord(n1, d1));\n        const [x2, y2] = transformCoord(getAnimatedCoord(n2, d2));\n        return <line key={el.id} x1={x1} y1={y1} x2={x2} y2={y2} stroke=\"blue\" strokeWidth=\"2\" />;\n      })}\n\n      {nodes.map(node => {\n        const d = displacements.find(dis => dis.id === node.id);\n        const [cx, cy] = transformCoord(getAnimatedCoord(node, d));\n\n        return (\n          <g key={node.id}>\n            <circle cx={cx} cy={cy} r=\"5\" fill=\"red\" />\n            {showNodeLabels && (\n              <text x={cx + 6} y={cy - 6} fontSize=\"10\" fill={darkMode ? '#eee' : 'black'}>\n                {node.id}\n              </text>\n            )}\n            {showForces && (node.fx !== 0 || node.fy !== 0) && (\n              <>\n                <line\n                  x1={cx}\n                  y1={cy}\n                  x2={cx + node.fx * 0.5}\n                  y2={cy - node.fy * 0.5}\n                  stroke=\"green\"\n                  strokeWidth=\"2\"\n                  markerEnd=\"url(#arrow)\"\n                />\n                <text\n                  x={cx + node.fx * 0.5 + 4}\n                  y={cy - node.fy * 0.5}\n                  fontSize=\"10\"\n                  fill=\"green\"\n                >\n                  ({node.fx}, {node.fy})\n                </text>\n              </>\n            )}\n          </g>\n        );\n      })}\n\n      <defs>\n        <marker\n          id=\"arrow\"\n          markerWidth=\"10\"\n          markerHeight=\"10\"\n          refX=\"10\"\n          refY=\"3\"\n          orient=\"auto\"\n          markerUnits=\"strokeWidth\"\n        >\n          <path d=\"M0,0 L0,6 L9,3 z\" fill=\"green\" />\n        </marker>\n      </defs>\n    </svg>\n  );\n};\n\nexport default Visualization;\n","\nimport React from \"react\";\n\nconst SettingsPanel = ({\n  showAnimation, setShowAnimation,\n  showNodeLabels, setShowNodeLabels,\n  showForces, setShowForces,\n  darkTheme, setDarkTheme\n}) => (\n  <div style={{ margin: \"1rem 0\", display: \"flex\", gap: \"1rem\", flexWrap: \"wrap\" }}>\n    <label><input type=\"checkbox\" checked={showAnimation} onChange={() => setShowAnimation(!showAnimation)} /> Анимация</label>\n    <label><input type=\"checkbox\" checked={showNodeLabels} onChange={() => setShowNodeLabels(!showNodeLabels)} /> Подписи узлов</label>\n    <label><input type=\"checkbox\" checked={showForces} onChange={() => setShowForces(!showForces)} /> Силы</label>\n    <label><input type=\"checkbox\" checked={darkTheme} onChange={() => setDarkTheme(!darkTheme)} /> Тёмная тема</label>\n  </div>\n);\nexport default SettingsPanel;\n","\nimport React, { useState, useEffect } from \"react\";\nimport NodeForm from \"./NodeForm\";\nimport ElementForm from \"./ElementForm\";\nimport ForceForm from \"./ForceForm\";\nimport NodeTable from \"./NodeTable\";\nimport Visualization from \"./Visualization\";\nimport SettingsPanel from \"./SettingsPanel\";\nimport logo from \"./assets/logo.png\";\n\nfunction App() {\n  const [nodes, setNodes] = useState([]);\n  const [elements, setElements] = useState([]);\n  const [x, setX] = useState(\"\");\n  const [y, setY] = useState(\"\");\n  const [fixedX, setFixedX] = useState(false);\n  const [fixedY, setFixedY] = useState(false);\n  const [fromNode, setFromNode] = useState(\"\");\n  const [toNode, setToNode] = useState(\"\");\n  const [forceNodeId, setForceNodeId] = useState(\"\");\n  const [fx, setFx] = useState(\"\");\n  const [fy, setFy] = useState(\"\");\n  const [showAnimation, setShowAnimation] = useState(true);\n  const [showNodeLabels, setShowNodeLabels] = useState(true);\n  const [showForces, setShowForces] = useState(true);\n  const [darkTheme, setDarkTheme] = useState(false);\n  const [displacements, setDisplacements] = useState([]);\n  const [animationFactor, setAnimationFactor] = useState(0);\n\n  useEffect(() => {\n    let direction = 1;\n    const interval = setInterval(() => {\n      setAnimationFactor((prev) => {\n        let next = prev + direction * 0.02;\n        if (next > 1 || next < 0) {\n          direction *= -1;\n          next = prev;\n        }\n        return next;\n      });\n    }, 30);\n    return () => clearInterval(interval);\n  }, []);\n\n  const addNode = () => {\n    if (x === \"\" || y === \"\") return;\n    const newNode = {\n      id: nodes.length + 1,\n      x: parseFloat(x),\n      y: parseFloat(y),\n      fixedX,\n      fixedY,\n      fx: 0,\n      fy: 0,\n    };\n    setNodes([...nodes, newNode]);\n    setX(\"\"); setY(\"\"); setFixedX(false); setFixedY(false);\n  };\n\n  const addElement = () => {\n    if (fromNode === \"\" || toNode === \"\" || fromNode === toNode) return;\n    const newElement = {\n      id: elements.length + 1,\n      from: parseInt(fromNode),\n      to: parseInt(toNode),\n    };\n    setElements([...elements, newElement]);\n    setFromNode(\"\"); setToNode(\"\");\n  };\n\n  const applyForce = () => {\n    if (forceNodeId === \"\") return;\n    const updatedNodes = nodes.map((node) =>\n      node.id === parseInt(forceNodeId)\n        ? { ...node, fx: parseFloat(fx) || 0, fy: parseFloat(fy) || 0 }\n        : node\n    );\n    setNodes(updatedNodes);\n    setForceNodeId(\"\"); setFx(\"\"); setFy(\"\");\n  };\n\n  const gaussSolve = (A, b) => {\n    const n = A.length;\n    for (let i = 0; i < n; i++) {\n      let maxEl = Math.abs(A[i][i]);\n      let maxRow = i;\n      for (let k = i + 1; k < n; k++) {\n        if (Math.abs(A[k][i]) > maxEl) {\n          maxEl = Math.abs(A[k][i]);\n          maxRow = k;\n        }\n      }\n      [A[i], A[maxRow]] = [A[maxRow], A[i]];\n      [b[i], b[maxRow]] = [b[maxRow], b[i]];\n      for (let k = i + 1; k < n; k++) {\n        const c = -A[k][i] / A[i][i];\n        for (let j = i; j < n; j++) {\n          A[k][j] += c * A[i][j];\n        }\n        b[k] += c * b[i];\n      }\n    }\n    const x = Array(n).fill(0);\n    for (let i = n - 1; i >= 0; i--) {\n      x[i] = b[i] / A[i][i];\n      for (let k = i - 1; k >= 0; k--) {\n        b[k] -= A[k][i] * x[i];\n      }\n    }\n    return x;\n  };\n\n  const calculate = () => {\n    const E = 1, A = 1, dof = nodes.length * 2;\n    let K = Array(dof).fill(0).map(() => Array(dof).fill(0));\n    let F = Array(dof).fill(0);\n\n    for (const el of elements) {\n      const n1 = nodes.find(n => n.id === el.from);\n      const n2 = nodes.find(n => n.id === el.to);\n      if (!n1 || !n2) continue;\n      const dx = n2.x - n1.x, dy = n2.y - n1.y;\n      const L = Math.sqrt(dx * dx + dy * dy), c = dx / L, s = dy / L;\n      const k = (E * A) / L;\n      const k_local = [\n        [ c*c, c*s, -c*c, -c*s ],\n        [ c*s, s*s, -c*s, -s*s ],\n        [-c*c, -c*s, c*c, c*s ],\n        [-c*s, -s*s, c*s, s*s ]\n      ].map(row => row.map(val => val * k));\n      const indices = [(n1.id-1)*2, (n1.id-1)*2+1, (n2.id-1)*2, (n2.id-1)*2+1];\n      for (let i = 0; i < 4; i++) for (let j = 0; j < 4; j++) {\n        K[indices[i]][indices[j]] += k_local[i][j];\n      }\n    }\n\n    nodes.forEach((node, index) => {\n      F[index*2] = node.fx;\n      F[index*2+1] = node.fy;\n    });\n\n    nodes.forEach((node, index) => {\n      if (node.fixedX) {\n        const i = index * 2;\n        for (let j = 0; j < dof; j++) { K[i][j] = 0; K[j][i] = 0; }\n        K[i][i] = 1; F[i] = 0;\n      }\n      if (node.fixedY) {\n        const i = index * 2 + 1;\n        for (let j = 0; j < dof; j++) { K[i][j] = 0; K[j][i] = 0; }\n        K[i][i] = 1; F[i] = 0;\n      }\n    });\n\n    const U = gaussSolve(K, F);\n    const results = nodes.map((node, index) => ({\n      id: node.id,\n      Ux: U[index * 2],\n      Uy: U[index * 2 + 1]\n    }));\n    setDisplacements(results);\n    alert(\"Результаты расчёта:\\n\" + results.map(r => `Узел ${r.id}: Ux = ${r.Ux.toFixed(4)}, Uy = ${r.Uy.toFixed(4)}`).join(\"\\n\"));\n  };\n\n  return (\n    <div style={{ padding: \"2rem\", backgroundColor: darkTheme ? \"#1e1e1e\" : \"#fff\", color: darkTheme ? \"#fff\" : \"#000\", minHeight: \"100vh\" }}>\n      <div style={{ display: \"flex\", alignItems: \"flex-end\", gap: \"1rem\", marginBottom: \"2rem\" }}>\n        <img src={logo} alt=\"FEM Solver Logo\" style={{ height: \"80px\" }} />\n        <div>\n          <h1 style={{ margin: 0 }}>FEM Solver</h1>\n          <h2 style={{ margin: 0, fontWeight: \"normal\" }}>Расчёт нагруженных конструкций</h2>\n        </div>\n      </div>\n\n      <SettingsPanel\n        showAnimation={showAnimation}\n        setShowAnimation={setShowAnimation}\n        showNodeLabels={showNodeLabels}\n        setShowNodeLabels={setShowNodeLabels}\n        showForces={showForces}\n        setShowForces={setShowForces}\n        darkTheme={darkTheme}\n        setDarkTheme={setDarkTheme}\n      />\n\n      <NodeForm {...{ x, y, setX, setY, fixedX, fixedY, setFixedX, setFixedY, addNode }} />\n      <NodeTable nodes={nodes} />\n      <ElementForm {...{ fromNode, toNode, setFromNode, setToNode, addElement, nodes }} />\n      <ForceForm {...{ forceNodeId, setForceNodeId, fx, fy, setFx, setFy, applyForce, nodes }} />\n      <Visualization {...{ nodes, elements, displacements, showAnimation, showNodeLabels, showForces, animationFactor }} />\n      <button onClick={calculate} style={{ marginTop: \"1rem\" }}>Выполнить расчёт</button>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n\n","module.exports = __webpack_public_path__ + \"static/media/logo.aae7427e.png\";"],"sourceRoot":""}